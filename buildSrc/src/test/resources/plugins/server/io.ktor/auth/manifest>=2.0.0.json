{
    "id": "auth",
    "name": "Authentication",
    "version": "2.0.0",
    "ktor_version": "2.0.0",
    "short_description": "Handle Basic and Digest HTTP Auth, Form authentication and OAuth 1a and 2",
    "github": "https://github.com/ktorio/ktor/blob/4a50c76c3264b0121b91a203d38473bb4aafbace/ktor-features/ktor-auth/jvm/src/io/ktor/auth/Authentication.kt",
    "copyright": "Apache 2.0",
    "vendor": {
        "name": "Ktor",
        "url": "https://ktor.io/"
    },
    "group": "Security",
    "required_feature_ids": [
        "routing"
    ],
    "install_recipe": {
        "install_block": ""
    },
    "dependencies": [
        {
            "group": "io.ktor",
            "artifact": "ktor-server-auth-jvm",
            "version": "$ktor_version"
        }
    ],
    "documentation": {
        "description": "Ktor provides the [Authentication](https://ktor.io/docs/authentication.html) plugin to handle authentication and authorization. Typical usage scenarios include logging in users, granting access to specific resources, and securely transmitting information between parties. You can also use `Authentication` with [Sessions](https://ktor.io/docs/sessions.html) to keep a user's information between requests.",
        "usage": "You can use the following authentications and authorization schemes:\n* _HTTP authentication_ that includes the `Basic`, `Digest`, and `Bearer` schemes.\n* _Form-based authentication_ that uses a web form to collect credential information and authenticate a user.\n* _JSON Web Tokens (JWT)_ for securely transmitting information between parties as a JSON object.\n* _LDAP_ for directory services authentication.\n* _OAuth_ that allows you to implement authentication using external providers such as Google, Facebook, Twitter, and so on.\n* _Session authentication_ that allows you to authenticate a user with already has an associated session.\n\nYou can learn more from the [Authentication](https://ktor.io/docs/authentication.html) section.",
        "options": ""
    }
}