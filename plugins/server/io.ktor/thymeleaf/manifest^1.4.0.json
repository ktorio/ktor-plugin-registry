{
    "id": "thymeleaf",
    "name": "Thymeleaf",
    "version": "1.5.2",
    "ktor_version": "1.4.0",
    "short_description": "Serve HTML content using Thymeleaf template engine",
    "github": "https://github.com/ktorio/ktor/blob/7e78e715cec3ff039cd628f8ff8ce875c35cde4c/ktor-features/ktor-thymeleaf/jvm/src/io/ktor/thymeleaf/Thymeleaf.kt",
    "copyright": "Apache 2.0",
    "vendor": {
        "name": "Ktor",
        "url": "https://ktor.io/"
    },
    "group": "Templating",
    "required_feature_ids": [
        "routing"
    ],
    "install_recipe": {
        "imports": [
            "io.ktor.thymeleaf.Thymeleaf",
            "io.ktor.thymeleaf.ThymeleafContent",
            "org.thymeleaf.templateresolver.ClassLoaderTemplateResolver"
        ],
        "install_block": "install(Thymeleaf) {\n    setTemplateResolver(ClassLoaderTemplateResolver().apply {\n        prefix = \"templates/thymeleaf/\"\n        suffix = \".html\"\n        characterEncoding = \"utf-8\"\n    })\n}",
        "templates": [
            {
                "position": "resources",
                "name": "templates/thymeleaf/index.html",
                "text": "<!DOCTYPE html >\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n<meta charset=\"UTF-8\">\n<title>Title</title>\n</head>\n<body>\n<span th:text=\"${user.name}\"></span>\n</body>\n</html>\n"
            },
            {
                "position": "in_routing",
                "text": "get(\"/html-thymeleaf\") {\n    call.respond(ThymeleafContent(\"index\", mapOf(\"user\" to ThymeleafUser(1, \"user1\"))))\n}"
            },
            {
                "position": "outside_app",
                "text": "data class ThymeleafUser(val id: Int, val name: String)"
            }
        ]
    },
    "dependencies": [
        {
            "group": "io.ktor",
            "artifact": "ktor-thymeleaf",
            "version": "$ktor_version"
        }
    ],
    "documentation": {
        "description": "Ktor includes support for `Thymeleaf` templates through the Thymeleaf plugin.",
        "usage": "Initialize the `Thymeleaf` plugin with a `ClassLoaderTemplateResolver`:\n\n```kotlin\ninstall(Thymeleaf) {\n    setTemplateResolver(ClassLoaderTemplateResolver().apply {\n        prefix = \"templates/\"\n        suffix = \".html\"\n        characterEncoding = \"utf-8\"\n    })\n}\n```\nThis TemplateResolver sets up Thymeleaf to look for the template files on the classpath in the \"templates\" package, relative to the current class path. A basic template looks like this:\n\n```html\n<!DOCTYPE html >\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<body>\n<h2 th:text=\"'Hello ' + ${user.name} + '!'\"></h2>\n<p>Your email address is <span th:text=\"${user.email}\"></span></p>\n</body>\n</html>\n```\nWith that template in `resources/templates` it is accessible elsewhere in the the application using the `call.respond()` method:\n\n```kotlin\ndata class User(val name: String, val email: String)\n\nget(\"/\") {\n    val user = User(\"user name\", \"user@example.com\")\n    call.respond(ThymeleafContent(\"hello\", mapOf(\"user\" to user)))\n    }\n```\n",
        "options": "* `setTemplateResolver`"
    }
}