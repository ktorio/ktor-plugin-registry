{
    "id": "pebble",
    "name": "Pebble",
    "version": "2.0.0",
    "ktor_version": "2.0.0",
    "short_description": "Allows you to use Pebble templates as views within your application.",
    "github": "https://github.com/ktorio/ktor/blob/7e78e715cec3ff039cd628f8ff8ce875c35cde4c/ktor-features/ktor-pebble/jvm/src/io/ktor/pebble/Pebble.kt",
    "copyright": "Apache 2.0",
    "vendor": {
        "name": "Ktor",
        "url": "https://ktor.io/"
    },
    "group": "Templating",
    "required_feature_ids": [
        "routing"
    ],
    "install_recipe": {
        "imports": [
            "io.pebbletemplates.pebble.loader.ClasspathLoader",
            "io.ktor.server.pebble.*",
            "io.ktor.server.response.*"
        ],
        "install_block": "install(Pebble) {\n    loader(ClasspathLoader().apply {\n        prefix = \"templates\"\n    })\n}",
        "templates": [
            {
                "position": "resources",
                "name": "templates/pebble-index.html",
                "text": "<html>\n    <body>\n        <h1>Hello, {{user.name}}</h1>\n    </body>\n</html>"
            },
            {
                "position": "outside_app",
                "text": "data class PebbleUser(val id: Int, val name: String)"
            },
            {
                "position": "in_routing",
                "text": "get(\"/pebble-index\") {\n    val sampleUser = PebbleUser(1, \"John\")\n    call.respond(PebbleContent(\"pebble-index.html\", mapOf(\"user\" to sampleUser)))\n}"
            }
        ]
    },
    "dependencies": [
        {
            "group": "io.ktor",
            "artifact": "ktor-server-pebble-jvm",
            "version": "$ktor_version"
        }
    ],
    "documentation": {
        "description": "Ktor allows you to use Pebble templates as views within your application by installing the [Pebble](https://ktor.io/docs/pebble.html) plugin.",
        "usage": "To load templates, you need to configure how to load templates using `PebbleEngine.Builder`. For example, the code snippet below enables Ktor to look up templates in the `templates` package relative to the current classpath:\n```kotlin\ninstall(Pebble) {\n    loader(ClasspathLoader().apply {\n        prefix = \"templates\"\n    })\n}\n```\n\nTo learn more, see [Pebble](https://ktor.io/docs/pebble.html).",
        "options": ""
    }
}