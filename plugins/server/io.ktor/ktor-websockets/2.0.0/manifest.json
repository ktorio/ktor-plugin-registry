{
    "id": "ktor-websockets",
    "name": "WebSockets",
    "version": "2.0.0",
    "ktor_version": "2.0.0",
    "short_description": "Adds WebSockets support for bidirectional communication with the client",
    "github": "https://github.com/ktorio/ktor/blob/4a50c76c3264b0121b91a203d38473bb4aafbace/ktor-features/ktor-websockets/jvm/src/io/ktor/websocket/WebSockets.kt",
    "copyright": "Apache 2.0",
    "vendor": {
        "name": "Ktor",
        "url": "https://ktor.io/"
    },
    "group": "Sockets",
    "required_feature_ids": [
        "routing"
    ],
    "install_recipe": {
        "imports": [
            "io.ktor.server.websocket.*",
            "io.ktor.websocket.*",
            "java.time.Duration"
        ],
        "install_block": "install(WebSockets) {\n    pingPeriod = Duration.ofSeconds(15)\n    timeout = Duration.ofSeconds(15)\n    maxFrameSize = Long.MAX_VALUE\n    masking = false\n}",
        "templates": [
            {
                "position": "in_routing",
                "text": "webSocket(\"/ws\") { // websocketSession\n    for (frame in incoming) {\n        if (frame is Frame.Text) {\n            val text = frame.readText()\n            outgoing.send(Frame.Text(\"YOU SAID: $text\"))\n            if (text.equals(\"bye\", ignoreCase = true)) {\n                close(CloseReason(CloseReason.Codes.NORMAL, \"Client said BYE\"))\n            }\n        }\n    }\n}"
            }
        ]
    },
    "dependencies": [
        {
            "group": "io.ktor",
            "artifact": "ktor-server-websockets-jvm",
            "version": "$ktor_version"
        }
    ],
    "documentation": {
        "description": "Ktor supports the [WebSocket](https://ktor.io/docs/websocket.html) protocol and allows you to create applications that require real-time data transfer from and to the server. For example, WebSockets can be used to create a chat application.",
        "usage": "To install `WebSockets`, pass it to the `install` function:\n\n```kotlin\ninstall(WebSockets)\n```\n\nOptionally, you can configure various `WebSockets` options:\n\n```kotlin\ninstall(WebSockets) {\n    pingPeriod = Duration.ofSeconds(15)\n    timeout = Duration.ofSeconds(15)\n    maxFrameSize = Long.MAX_VALUE\n    masking = false\n}\n```\n\nTo learn how to handle WebSockets sessions, see [WebSocket](https://ktor.io/docs/websocket.html).",
        "options": ""
    }
}