{
    "id": "default-headers",
    "name": "Default Headers",
    "version": "1.5.2",
    "ktor_version": "1.4.0",
    "short_description": "This plugin adds a default set of headers to HTTP responses",
    "github": "https://github.com/ktorio/ktor/blob/962677f73f0900cae32e90519fa1e850dd0acfa8/ktor-server/ktor-server-core/jvm/src/io/ktor/features/DefaultHeaders.kt",
    "copyright": "Apache 2.0",
    "vendor": {
        "name": "Ktor",
        "url": "https://ktor.io/"
    },
    "group": "HTTP",
    "install_recipe": {
        "imports": [
            "io.ktor.features.*"
        ],
        "install_block": "install(DefaultHeaders) {\n    header(\"X-Engine\", \"Ktor\") // will send this header with each response\n}"
    },
    "documentation": {
        "description": "The `DefaultHeaders` plugin adds the standard `Server` and `Date` headers into each response. Moreover, you can provide additional default headers and override the `Server` header.\n\n",
        "usage": "## Installation\nTo install the `DefaultHeaders` plugin, pass it to the `install` function in the application initialization code. This can be the `main` function ...\n\n```kotlin\nimport io.ktor.features.*\n// ...\nfun Application.main() {\n  install(DefaultHeaders)\n  // ...\n}\n```\n... or a specified `module`:\n\n```kotlin\nimport io.ktor.features.*\n// ...\nfun Application.module() {\n    install(DefaultHeaders)\n    // ...\n}\n```\nThe `DefaultHeaders` plugin adds the `Server` and `Date` headers into each response. If necessary, you can override the `Server`, as described in `Override Headers` section.\n\n## Add Additional Headers\nTo customize a list of default headers, pass a desired header to `install` by using the `header(name, value)` function. The name parameter accepts an `HttpHeaders` value, for example:\n\n```kotlin\ninstall(DefaultHeaders) {\n    header(HttpHeaders.ETag, \"7c876b7e\")\n}\n```\nTo add a custom header, pass its name as a string value:\n\n```kotlin\ninstall(DefaultHeaders) {\n    header(\"Custom-Header\", \"Some value\")\n}\n```\n## Override Headers\nTo override the `Server` header, use a corresponding `HttpHeaders` value:\n\n```kotlin\ninstall(DefaultHeaders) {\n    header(HttpHeaders.Server, \"Custom\")\n}\n```\nNote that the `Date` header is cached due to performance reasons and cannot be overridden by using `DefaultHeaders`. If you need to override it, do not install the `DefaultHeaders` plugin and use route interception instead.\n\n## Customize Headers for Specific Routes\nIf you need to add headers for a specific route only, you can append desired headers into a response. The code snippet below shows how to do this for the `/order` request:\n\n```kotlin\nget(\"/order\") {\n    call.response.headers.append(HttpHeaders.ETag, \"7c876b7e\")\n}\n```\nYou can learn more about routing in Ktor from [Routing in Ktor](https://ktor.io/docs/routing-in-ktor.html).\n\n",
        "options": "* `header` -- specify default value for the given header"
    }
}