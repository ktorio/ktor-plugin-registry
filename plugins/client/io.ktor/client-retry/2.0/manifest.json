{
    "id": "client-retry",
    "name": "HttpRequestRetry",
    "version": "2.0.0",
    "ktor_version": "2.0.0",
    "short_description": "Configures the retry policy for failed requests",
    "github": "https://github.com/ktorio/ktor-documentation/tree/main/codeSnippets/snippets/client-retry",
    "copyright": "Apache 2.0",
    "vendor": {
        "name": "Ktor",
        "url": "https://ktor.io/"
    },
    "group": "HTTP",
    "install_recipe": {
        "imports": [
            "io.ktor.client.plugins.*"
        ],
        "install_block": "install(HttpRequestRetry) {\n    retryOnServerErrors(maxRetries = 5)\n    exponentialDelay()\n}"
    },
    "documentation": {
        "description": "The `HttpRequestRetry` plugin allows you to configure the retry policy for failed requests in various ways: specify the number of retries, configure conditions for retrying a request, or specify delay logic.\nBy default, the Ktor client doesn't retry [requests](request.md) that failed due to network or server errors.\nYou can use the [HttpRequestRetry](https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client.plugins/-http-request-retry/index.html) plugin to configure the retry policy for failed requests in various ways: specify the number of retries, configure conditions for retrying a request, or modify a request before retrying.",
        "usage": "A [runnable example](https://github.com/ktorio/ktor-documentation/tree/%ktor_version%/codeSnippets/snippets/client-retry) below shows how to configure the basic retry policy:\n\n```kotlin\nimport io.ktor.client.*\nimport io.ktor.client.engine.cio.*\nimport io.ktor.client.plugins.*\n//...\nval client = HttpClient(CIO) {\n    install(HttpRequestRetry)\n}\n### Configure retry conditions {id=\"conditions\"}\n\nThere are also configuration settings that allow you to configure conditions for retrying a request or specify delay logic:\n\n```kotlin\ninstall(HttpRequestRetry) {\n    maxRetries = 5\n    retryIf { request, response ->\n        !response.status.isSuccess()\n    }\n    retryOnExceptionIf { request, cause -> \n        cause is NetworkError \n    }\n    delayMillis { retry -> \n        retry * 3000L \n    } // retries in 3, 6, 9, etc. seconds\n}\n```\n\n### Modify a request before retrying {id=\"modify\"}\n\nIf you need to modify a request before retrying, use `modifyRequest`:\n\n```kotlin\ninstall(HttpRequestRetry) {\n    // Retry conditions\n    modifyRequest { request ->\n        request.headers.append(\"x-retry-count\", retryCount.toString())\n    }\n}\n```\n```\n\n* The `retryOnServerErrors` function enables retrying a request if a `5xx` response is received from a server and specifies the number of retries.\n* `exponentialDelay` specifies an exponential delay between retries, which is calculated using the Exponential backoff algorithm.\n\nYou can learn more about supported configuration options from [HttpRequestRetry.Configuration](https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client.plugins/-http-request-retry/-configuration/index.html).",
        "options": ""
    },
    "target": "client"
}