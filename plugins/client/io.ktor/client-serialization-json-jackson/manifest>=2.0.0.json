{
    "id": "client-serialization-json-jackson",
    "name": "Jackson Serialization",
    "version": "2.0.0",
    "ktor_version": "2.0.0",
    "short_description": "Serializes request bodies to json using Jackson",
    "github": "https://github.com/ktorio/ktor/blob/main/ktor-client/ktor-client-plugins/ktor-client-json/ktor-client-jackson/jvm/src/io/ktor/client/plugins/jackson/JacksonSerializer.kt",
    "copyright": "Apache 2.0",
    "vendor": {
        "name": "Ktor",
        "url": "https://ktor.io/"
    },
    "group": "Serialization",
    "install_recipe": {
        "imports": [
            "io.ktor.client.plugins.contentnegotiation.*",
            "io.ktor.serialization.jackson.*"
        ],
        "install_block": "install(ContentNegotiation) {\n    jackson()\n}"
    },
    "dependencies": [
        {
            "group": "io.ktor",
            "artifact": "ktor-client-content-negotiation",
            "version": "$ktor_version"
        },
        {
            "group": "io.ktor",
            "artifact": "ktor-serialization-jackson",
            "version": "$ktor_version"
        }
    ],
    "documentation": {
        "description": "The ContentNegotiation plugin serves two primary purposes: negotiating media types between the client and server and serializing/deserializing the content in a specific format when sending requests and receiving responses.\n\nThe [ContentNegotiation](https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-content-negotiation/io.ktor.client.plugins.contentnegotiation/-content-negotiation/index.html) plugin serves two primary purposes:\n* Negotiating media types between the client and server. For this, it uses the `Accept` and `Content-Type` headers.\n* Serializing/deserializing the content in a specific format when sending requests and receiving responses.\n\n> On the server, Ktor provides the __ContentNegotiation__ plugin for serializing/deserializing content.\n",
        "usage": "To install ContentNegotiation, pass it to the install function inside a client configuration block:\n\n```kotlin\nval client = HttpClient(CIO) {\n    install(ContentNegotiation)\n}\n```\n\nTo register the Jackson serializer in your application, call the jackson method:\n```kotlin\nimport io.ktor.client.plugins.contentnegotiation.*\nimport io.ktor.serialization.jackson.*\n\nval client = HttpClient(CIO) {\n    install(ContentNegotiation) {\n        jackson()\n    }\n}\n```\nThe __jackson__ method also allows you to adjust serialization settings provided by [ObjectMapper](https://fasterxml.github.io/jackson-databind/javadoc/2.9/com/fasterxml/jackson/databind/ObjectMapper.html).\n\n",
        "options": ""
    },
    "target": "client"
}